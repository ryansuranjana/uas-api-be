{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "Lumen Swagger API documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "summary": "Get authenticated user",
                "operationId": "9d9bc556f927575aa492a88c28fe5908",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "summary": "User logout",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successful logout"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "summary": "Get list of students",
                "operationId": "75378cfd9c3d128e0846de3d32b101ec",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create a new student",
                "operationId": "5e69d562cd0a6141ac0ffdd5a921d62b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nis",
                                    "name",
                                    "email",
                                    "date_of_birth",
                                    "place_of_birth",
                                    "class_name"
                                ],
                                "properties": {
                                    "nis": {
                                        "type": "string",
                                        "maxLength": 8,
                                        "example": "12345678"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "example": "08123456789"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Jl. Mawar No. 1"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-01-01"
                                    },
                                    "place_of_birth": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Jakarta"
                                    },
                                    "class_name": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "XII IPA 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/students/{id}": {
            "get": {
                "summary": "Get student by ID",
                "operationId": "00eebadc92fc1451e63b944dc236ce5e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            },
            "put": {
                "summary": "Update a student",
                "operationId": "ab4663f1b3d03e5867d9dce3e8fa14a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "nis",
                                    "name",
                                    "email",
                                    "date_of_birth",
                                    "place_of_birth",
                                    "class_name"
                                ],
                                "properties": {
                                    "nis": {
                                        "type": "string",
                                        "maxLength": 8,
                                        "example": "12345678"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "example": "08123456789"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Jl. Mawar No. 1"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2000-01-01"
                                    },
                                    "place_of_birth": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Jakarta"
                                    },
                                    "class_name": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "XII IPA 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student updated successfully"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a student",
                "operationId": "ae8784bb4ca4b3b3614a7366dc0f5138",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student deleted successfully"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Get list of users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "summary": "Get user by ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "summary": "Update user by ID",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}